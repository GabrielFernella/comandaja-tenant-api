

services:
  tenant-api:
    container_name: tenant-api
    command: npm run dev
    volumes:
      - .:/usr/src/app
    ports:
      - "3005:3005"
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    env_file:
      - .env.dev
    # environment:
    #   - NODE_ENV=development
    #   - PORT=3005
    #   - DB_HOST=db-tenants
    #   - DB_PORT=5432
    #   - DB_USER=postgres
    #   - DB_PASS=postgres
    #   - DB_NAME=tenants_db_dev
    depends_on:
      - db-tenants
    networks:
      - comandaja-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tenant.rule=PathPrefix(`/tenants`)"
      - "traefik.http.services.tenant-api.loadbalancer.server.port=3005"
      - "traefik.docker.network=comandaja-net"

      # --- Adicionado para Autenticação ---
      # 1. Define o middleware que aponta para o auth-api
      - "traefik.http.middlewares.auth-middleware.forwardauth.address=http://auth-api:3001/auth/validate"
      - "traefik.http.middlewares.auth-middleware.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=X-Metadata"
      # - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=X-User-Id, X-Tenant-Id, X-Name, X-Kind, X-Metadata"

      # 2. Aplica o middleware ao roteador 'user' (definido acima)
      - "traefik.http.routers.user.middlewares=auth-middleware@docker"
      # --- Fim da Adição ---

  db-tenants:
    image: postgres:15
    container_name: tenant-db
    env_file:
      - .env.dev
    # environment:
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=postgres
    #   - POSTGRES_DB=tenants_db_dev
    volumes:
      - pgdata_tenant:/var/lib/postgresql/data
    networks:
      - comandaja-net

volumes:
  pgdata_tenant:

networks:
  comandaja-net:
